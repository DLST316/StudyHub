// StudyHub ERD - MVP 확정 버전(V4, 추천 시스템 변경)

Table users {
  id int [pk, increment]
  email varchar [unique, not null]
  password varchar(60) [not null, note: 'bcrypt 대응']
  name varchar [not null]
  education_status varchar [not null, note: '재학, 졸업, 중퇴, 휴학 등']
  university varchar [not null]
  major varchar [not null]
  role enum('USER', 'ADMIN') [default: 'USER', not null]
  is_blocked boolean [default: false, not null]
  created_at timestamp [default: `current_timestamp`, not null]
}

Table boards {
  id int [pk, increment]
  name varchar [not null, unique, note: '게시판명(자유, QNA 등)']
  description varchar
  created_at timestamp [default: `current_timestamp`, not null]
}

Table posts {
  id int [pk, increment]
  board_id int [not null]
  user_id int [not null]
  title varchar [not null]
  content text [not null]
  view_count int [default: 0, not null]
  like_count int [default: 0, not null]
  dislike_count int [default: 0, not null]
  is_notice boolean [default: false, not null]
  created_at timestamp [default: `current_timestamp`, not null]
  updated_at timestamp
}

Table post_likes {
  id int [pk, increment]
  post_id int [not null]
  user_id int [not null]
  type enum('LIKE', 'DISLIKE') [not null, note: '추천 또는 비추천']
  created_at timestamp [default: `current_timestamp`, not null]
  indexes {
    (post_id, user_id) [unique, note: '한 사용자는 한 게시글에 하나의 추천/비추천만 가능']
  }
}

Table post_comments {
  id int [pk, increment]
  post_id int [not null]
  user_id int [not null]
  content text [not null]
  parent_id int [note: 'null if root comment']
  like_count int [default: 0, not null]
  created_at timestamp [default: `current_timestamp`, not null]
}

Table studies {
  id int [pk, increment]
  title varchar [not null]
  description text [not null]
  leader_id int [not null]
  recruitment_limit int [not null]
  requirement text [not null]
  deadline date
  created_at timestamp [default: `current_timestamp`, not null]
}

Table study_applications {
  id int [pk, increment]
  user_id int [not null]
  study_id int [not null]
  status varchar [default: 'PENDING', not null, note: 'PENDING, APPROVED, REJECTED']
  applied_at timestamp [default: `current_timestamp`, not null]
  indexes {
    (user_id, study_id) [unique]
  }
}

Table study_comments {
  id int [pk, increment]
  study_id int [not null]
  user_id int [not null]
  content text [not null]
  created_at timestamp [default: `current_timestamp`, not null]
}

Table files {
  id int [pk, increment]
  user_id int [not null]
  post_id int
  comment_id int
  type varchar [not null, note: 'IMAGE, ATTACH, THUMBNAIL, PROFILE']
  url varchar [not null]
  original_name varchar [not null]
  size int [not null]
  uploaded_at timestamp [default: `current_timestamp`, not null]
}

Table reports {
  id int [pk, increment]
  reporter_id int [not null]
  target_type enum('USER', 'POST', 'COMMENT', 'STUDY', 'STUDY_COMMENT') [not null]
  target_id int [not null]
  reason text [not null]
  is_resolved boolean [default: false, not null]
  reported_at timestamp [default: `current_timestamp`, not null]
}

Ref: boards.id < posts.board_id
Ref: users.id < posts.user_id
Ref: posts.id < post_likes.post_id
Ref: users.id < post_likes.user_id
Ref: posts.id < post_comments.post_id
Ref: users.id < post_comments.user_id
Ref: post_comments.parent_id > post_comments.id [delete: cascade]
Ref: users.id < studies.leader_id
Ref: users.id < study_applications.user_id
Ref: studies.id < study_applications.study_id
Ref: studies.id < study_comments.study_id
Ref: users.id < study_comments.user_id
Ref: users.id < files.user_id
Ref: posts.id < files.post_id
Ref: post_comments.id < files.comment_id
Ref: users.id < reports.reporter_id